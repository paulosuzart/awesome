# 17 "cohttp/src/accept_lexer.mll"
 
  open Accept_parser

# 6 "cohttp/src/accept_lexer.ml"
let __ocaml_lex_tables = {
  Lexing.lex_base =
   "\000\000\247\255\248\255\036\000\250\255\251\255\252\255\253\255\
    \254\255\072\000\009\000\001\000\254\255\002\000\255\255";
  Lexing.lex_backtrk =
   "\255\255\255\255\255\255\006\000\255\255\255\255\255\255\255\255\
    \255\255\000\000\255\255\002\000\255\255\002\000\255\255";
  Lexing.lex_default =
   "\003\000\000\000\000\000\003\000\000\000\000\000\000\000\000\000\
    \000\000\003\000\011\000\011\000\000\000\011\000\000\000";
  Lexing.lex_trans =
   "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\255\255\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \002\000\000\000\004\000\255\255\014\000\000\000\000\000\000\000\
    \255\255\255\255\009\000\012\000\006\000\255\255\000\000\008\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\255\255\007\000\255\255\005\000\255\255\255\255\
    \255\255\000\000\000\000\000\000\255\255\000\000\255\255\000\000\
    \000\000\000\000\000\000\000\000\255\255\255\255\000\000\000\000\
    \255\255\255\255\000\000\255\255\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\013\000\000\000\000\000\
    \255\255\000\000\255\255\000\000\000\000\000\000\000\000\000\000\
    \255\255\255\255\000\000\000\000\255\255\000\000\000\000\255\255\
    \000\000\000\000\000\000\255\255\000\000\255\255\000\000\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\255\255\
    \000\000\255\255\000\000\255\255\255\255\255\255\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\255\255\000\000\255\255\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \001\000\255\255\255\255\000\000\000\000\000\000\000\000\000\000\
    \000\000\255\255\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\255\255\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \255\255";
  Lexing.lex_check =
   "\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\000\000\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \000\000\255\255\000\000\011\000\013\000\255\255\255\255\255\255\
    \000\000\000\000\000\000\010\000\000\000\003\000\255\255\000\000\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\255\255\255\255\255\255\003\000\255\255\003\000\255\255\
    \255\255\255\255\255\255\255\255\003\000\003\000\255\255\255\255\
    \003\000\009\000\255\255\003\000\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\000\000\000\000\000\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\010\000\255\255\255\255\
    \009\000\255\255\009\000\255\255\255\255\255\255\255\255\255\255\
    \009\000\009\000\255\255\255\255\009\000\255\255\255\255\009\000\
    \255\255\255\255\255\255\000\000\255\255\000\000\255\255\003\000\
    \003\000\003\000\009\000\009\000\009\000\009\000\009\000\009\000\
    \009\000\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\003\000\
    \255\255\003\000\255\255\009\000\009\000\009\000\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\009\000\255\255\009\000\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \000\000\011\000\013\000\255\255\255\255\255\255\255\255\255\255\
    \255\255\010\000\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\003\000\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \009\000";
  Lexing.lex_base_code =
   "";
  Lexing.lex_backtrk_code =
   "";
  Lexing.lex_default_code =
   "";
  Lexing.lex_trans_code =
   "";
  Lexing.lex_check_code =
   "";
  Lexing.lex_code =
   "";
}

let rec header_value lexbuf =
   __ocaml_lex_header_value_rec lexbuf 0
and __ocaml_lex_header_value_rec lexbuf __ocaml_lex_state =
  match Lexing.engine __ocaml_lex_tables __ocaml_lex_state lexbuf with
      | 0 ->
# 25 "cohttp/src/accept_lexer.mll"
        ( STAR )
# 124 "cohttp/src/accept_lexer.ml"

  | 1 ->
# 26 "cohttp/src/accept_lexer.mll"
        ( SLASH )
# 129 "cohttp/src/accept_lexer.ml"

  | 2 ->
# 27 "cohttp/src/accept_lexer.mll"
        ( SEMI )
# 134 "cohttp/src/accept_lexer.ml"

  | 3 ->
# 28 "cohttp/src/accept_lexer.mll"
        ( COMMA )
# 139 "cohttp/src/accept_lexer.ml"

  | 4 ->
# 29 "cohttp/src/accept_lexer.mll"
        ( EQUAL )
# 144 "cohttp/src/accept_lexer.ml"

  | 5 ->
# 30 "cohttp/src/accept_lexer.mll"
         ( QS (List.fold_right (^) (qs [] lexbuf) "") )
# 149 "cohttp/src/accept_lexer.ml"

  | 6 ->
let
# 31 "cohttp/src/accept_lexer.mll"
                tok
# 155 "cohttp/src/accept_lexer.ml"
= Lexing.sub_lexeme lexbuf lexbuf.Lexing.lex_start_pos lexbuf.Lexing.lex_curr_pos in
# 31 "cohttp/src/accept_lexer.mll"
                    ( TOK tok )
# 159 "cohttp/src/accept_lexer.ml"

  | 7 ->
# 32 "cohttp/src/accept_lexer.mll"
        ( header_value lexbuf )
# 164 "cohttp/src/accept_lexer.ml"

  | 8 ->
# 33 "cohttp/src/accept_lexer.mll"
        ( EOI )
# 169 "cohttp/src/accept_lexer.ml"

  | __ocaml_lex_state -> lexbuf.Lexing.refill_buff lexbuf;
      __ocaml_lex_header_value_rec lexbuf __ocaml_lex_state

and qs sl lexbuf =
   __ocaml_lex_qs_rec sl lexbuf 10
and __ocaml_lex_qs_rec sl lexbuf __ocaml_lex_state =
  match Lexing.engine __ocaml_lex_tables __ocaml_lex_state lexbuf with
      | 0 ->
# 35 "cohttp/src/accept_lexer.mll"
           ( qs ("\""::sl) lexbuf )
# 181 "cohttp/src/accept_lexer.ml"

  | 1 ->
# 36 "cohttp/src/accept_lexer.mll"
         ( sl )
# 186 "cohttp/src/accept_lexer.ml"

  | 2 ->
let
# 37 "cohttp/src/accept_lexer.mll"
               s
# 192 "cohttp/src/accept_lexer.ml"
= Lexing.sub_lexeme lexbuf lexbuf.Lexing.lex_start_pos lexbuf.Lexing.lex_curr_pos in
# 37 "cohttp/src/accept_lexer.mll"
                 ( qs (s::sl) lexbuf )
# 196 "cohttp/src/accept_lexer.ml"

  | __ocaml_lex_state -> lexbuf.Lexing.refill_buff lexbuf;
      __ocaml_lex_qs_rec sl lexbuf __ocaml_lex_state

;;

