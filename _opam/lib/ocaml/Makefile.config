# Makefile.config.  Generated from Makefile.config.in by configure.

#**************************************************************************
#*                                                                        *
#*                                 OCaml                                  *
#*                                                                        *
#*            Xavier Leroy, projet Cristal, INRIA Rocquencourt            *
#*                                                                        *
#*   Copyright 1999 Institut National de Recherche en Informatique et     *
#*     en Automatique.                                                    *
#*                                                                        *
#*   All rights reserved.  This file is distributed under the terms of    *
#*   the GNU Lesser General Public License version 2.1, with the          *
#*   special exception on linking described in the file LICENSE.          *
#*                                                                        *
#**************************************************************************

# The configuration Makefile

## Variables defining the current version of OCaml
OCAML_DEVELOPMENT_VERSION=false
OCAML_VERSION_MAJOR=5
OCAML_VERSION_MINOR=1
OCAML_VERSION_PATCHLEVEL=1
OCAML_VERSION_EXTRA=

## The EMPTY variable, used in other definitions to preserve spaces
EMPTY=

## Arguments passed to the configure script

CONFIGURE_ARGS=--prefix=/home/runner/work/awesome/awesome/_opam --docdir=/home/runner/work/awesome/awesome/_opam/doc/ocaml -C

## Top build directory

TOP_BUILDDIR = .

## Installation directories

prefix=/home/runner/work/awesome/awesome/_opam

exec_prefix=${prefix}

### Where to install the binaries
BINDIR=${exec_prefix}/bin

datarootdir=${prefix}/share

### Where to install the standard library
LIBDIR=${exec_prefix}/lib/ocaml

### Where to install the stub code for the standard library
STUBLIBDIR=${exec_prefix}/lib/ocaml/stublibs

### Where to install the man pages
# Man pages for commands go in $(MANDIR)/man1
# Man pages for the library go in $(MANDIR)/man3
MANDIR=${prefix}/man
PROGRAMS_MAN_DIR=$(MANDIR)/man1
LIBRARIES_MAN_DIR=$(MANDIR)/man3

### Do #! scripts work on your system?
### Beware: on some systems (e.g. SunOS 4), this will work only if
### the string "#!$(BINDIR)/ocamlrun" is less than 32 characters long.
### In doubt, set HASHBANGSCRIPTS to false.
SHEBANGSCRIPTS=true
LONG_SHEBANG=false
# For compatibility
HASHBANGSCRIPTS:=$(SHEBANGSCRIPTS)

### Path to the libtool script
LIBTOOL = $(TOP_BUILDDIR)/libtool

### Which C compiler to use
TOOLPREF=
CC=gcc

CC_HAS_DEBUG_PREFIX_MAP=true
AS_HAS_DEBUG_PREFIX_MAP=true

LDFLAGS?=

### How to invoke the C preprocessor through the C compiler
CPP=gcc -E -P

### How to invoke ar
ARCMD=ar

### Extension of object files
O=o
EXT_OBJ=.o

### How to tell the C compiler to output an object file
OUTPUTOBJ=-o $(EMPTY)

### Extension of static libraries
A=a
EXT_LIB=.a

### Extension of assembler files
S=s
EXT_ASM=.s

### Extension for shared libraries
SO=so
EXT_DLL=.so

SHAREDLIB_CFLAGS=-fPIC

# Compile-time option to $(CC) to add a directory to be searched
# at run-time for shared libraries
RPATH=-Wl,-rpath,

############# Configuration for the native-code compiler

### Whether the native compiler has been enabled or not
NATIVE_COMPILER=true

### Name of architecture for the native-code compiler
### Currently supported:
###
### i386        Intel Pentium PCs under Linux, *BSD*, NextStep
### power       Macintosh under Mac OS X and Linux
### arm         ARM under Linux
###
### Set ARCH=none if your machine is not supported
ARCH=amd64

# Whether the architecture has 64 bits
ARCH64=true

# Endianness for this architecture
ENDIANNESS=le

### Name of architecture model for the native-code compiler.
### Some architectures come in several slightly different flavors
### that share a common code generator. This variable tailors the
### behavior of the code generator to the particular flavor used.
### Currently needed only if ARCH=power; leave MODEL=default for
### other architectures.
### If ARCH=power: set MODEL=ppc
### For other architectures: leave MODEL=default
###
MODEL=default

### Name of operating system family for the native-code compiler.
SYSTEM=linux

### Command and flags to use for assembling ocamlopt-generated code
ASM=as

### Command and flags to use for assembling .S files (often with preprocessing)
ASPP=gcc -c

### Set to "true" to install ".byte" executables (ocamlc.byte, etc.)
INSTALL_BYTECODE_PROGRAMS=true

############# Configuration for the contributed libraries

### Which libraries to compile and install
# Currently available:
#       dynlink           Dynamic linking (bytecode and native)
#       (win32)unix       Unix system calls
#       str               Regular expressions and high-level string processing
#       systhreads        Same as threads, requires POSIX threads
OTHERLIBRARIES=dynlink runtime_events unix str systhreads

UNIX_OR_WIN32=unix
INSTALL_SOURCE_ARTIFACTS=true

CFLAGS=
CPPFLAGS=
OCAMLC_CFLAGS=-O2 -fno-strict-aliasing -fwrapv -pthread -fPIC 

OCAMLC_CPPFLAGS= -D_FILE_OFFSET_BITS=64 
ZSTD_LIBS=-lzstd
BYTECCLIBS=-lzstd  -lm  -lpthread
EXE=
OUTPUTEXE=-o $(EMPTY)
SUPPORTS_SHARED_LIBRARIES=true
MKSHAREDLIBRPATH=-Wl,-rpath,
DYNLINKOPTS=
NATDYNLINK=true
NATDYNLINKOPTS=-Wl,-E
SYSLIB=-l$(1)
MKLIB=rm -f $(1) && ar rc $(1) $(2)
# #7678: ocamlopt uses these only to compile .c files, and the behaviour for the
#        two drivers should be identical.
OCAMLOPT_CFLAGS=-O2 -fno-strict-aliasing -fwrapv -pthread -fPIC 
OCAMLOPT_CPPFLAGS= -D_FILE_OFFSET_BITS=64 
NATIVECCLIBS= -lm  -lpthread
SYSTHREAD_SUPPORT=true
PACKLD=ld -r -o $(EMPTY)
CCOMPTYPE=cc
TOOLCHAIN=cc
CMXS=cmxs

# On Windows, MKDLL, MKEXE and MKMAINDLL must ultimately be equivalent to
#   flexlink $(FLEXLINK_FLAGS) [-exe|-maindll]
# or OCAML_FLEXLINK overriding will not work (see utils/config.generated.ml.in)

FLEXDLL_CHAIN=
FLEXLINK_FLAGS=

MKEXE=$(CC) $(OC_CFLAGS) $(CFLAGS) $(OC_LDFLAGS) $(LDFLAGS)
MKDLL=$(CC) -shared $(OC_DLL_LDFLAGS) $(LDFLAGS)
MKMAINDLL=$(CC) -shared  
MKEXEDEBUGFLAG=-g

RUNTIMED=true
INSTRUMENTED_RUNTIME=true
INSTRUMENTED_RUNTIME_LIBS=
WITH_DEBUGGER=ocamldebugger
WITH_OCAMLDOC=ocamldoc
WITH_OCAMLTEST=
ASM_CFI_SUPPORTED=true
WITH_FRAME_POINTERS=false
HEADER_RESERVED_BITS=0
LIBUNWIND_AVAILABLE=@libunwind_available@
LIBUNWIND_INCLUDE_FLAGS=@libunwind_include_flags@
LIBUNWIND_LINK_FLAGS=@libunwind_link_flags@
WITH_FPIC=false
TARGET=x86_64-pc-linux-gnu
HOST=x86_64-pc-linux-gnu
FLAMBDA=false
WITH_FLAMBDA_INVARIANTS=false
WITH_CMM_INVARIANTS=false
FORCE_SAFE_STRING=true
DEFAULT_SAFE_STRING=true
WINDOWS_UNICODE=0
AFL_INSTRUMENT=false
FLAT_FLOAT_ARRAY=true
FUNCTION_SECTIONS=true
AWK=gawk
STDLIB_MANPAGES=true
NAKED_POINTERS=false

# Deprecated variables

## Variables deprecated since OCaml 5.0

UNIXLIB=unix

## Variables renamed in OCaml 4.13

RUNTIMEI=$(INSTRUMENTED_RUNTIME)
