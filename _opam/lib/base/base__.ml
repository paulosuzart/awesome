(* generated by dune *)

(** @canonical Base.Applicative *)
module Applicative = Base__Applicative

(** @canonical Base.Applicative_intf *)
module Applicative_intf = Base__Applicative_intf

(** @canonical Base.Array *)
module Array = Base__Array

(** @canonical Base.Array0 *)
module Array0 = Base__Array0

(** @canonical Base.Array_permute *)
module Array_permute = Base__Array_permute

(** @canonical Base.Avltree *)
module Avltree = Base__Avltree

(** @canonical Base.Backtrace *)
module Backtrace = Base__Backtrace

(** @canonical Base.Binary_search *)
module Binary_search = Base__Binary_search

(** @canonical Base.Binary_searchable *)
module Binary_searchable = Base__Binary_searchable

(** @canonical Base.Binary_searchable_intf *)
module Binary_searchable_intf = Base__Binary_searchable_intf

(** @canonical Base.Blit *)
module Blit = Base__Blit

(** @canonical Base.Blit_intf *)
module Blit_intf = Base__Blit_intf

(** @canonical Base.Bool *)
module Bool = Base__Bool

(** @canonical Base.Bool0 *)
module Bool0 = Base__Bool0

(** @canonical Base.Buffer *)
module Buffer = Base__Buffer

(** @canonical Base.Buffer_intf *)
module Buffer_intf = Base__Buffer_intf

(** @canonical Base.Bytes *)
module Bytes = Base__Bytes

(** @canonical Base.Bytes0 *)
module Bytes0 = Base__Bytes0

(** @canonical Base.Bytes_tr *)
module Bytes_tr = Base__Bytes_tr

(** @canonical Base.Char *)
module Char = Base__Char

(** @canonical Base.Char0 *)
module Char0 = Base__Char0

(** @canonical Base.Comparable *)
module Comparable = Base__Comparable

(** @canonical Base.Comparable_intf *)
module Comparable_intf = Base__Comparable_intf

(** @canonical Base.Comparator *)
module Comparator = Base__Comparator

(** @canonical Base.Comparisons *)
module Comparisons = Base__Comparisons

(** @canonical Base.Container *)
module Container = Base__Container

(** @canonical Base.Container_intf *)
module Container_intf = Base__Container_intf

(** @canonical Base.Either *)
module Either = Base__Either

(** @canonical Base.Either0 *)
module Either0 = Base__Either0

(** @canonical Base.Either_intf *)
module Either_intf = Base__Either_intf

(** @canonical Base.Equal *)
module Equal = Base__Equal

(** @canonical Base.Error *)
module Error = Base__Error

(** @canonical Base.Exn *)
module Exn = Base__Exn

(** @canonical Base.Field *)
module Field = Base__Field

(** @canonical Base.Fieldslib *)
module Fieldslib = Base__Fieldslib

(** @canonical Base.Float *)
module Float = Base__Float

(** @canonical Base.Float0 *)
module Float0 = Base__Float0

(** @canonical Base.Floatable *)
module Floatable = Base__Floatable

(** @canonical Base.Fn *)
module Fn = Base__Fn

(** @canonical Base.Formatter *)
module Formatter = Base__Formatter

(** @canonical Base.Globalize *)
module Globalize = Base__Globalize

(** @canonical Base.Hash *)
module Hash = Base__Hash

(** @canonical Base.Hash_intf *)
module Hash_intf = Base__Hash_intf

(** @canonical Base.Hash_set *)
module Hash_set = Base__Hash_set

(** @canonical Base.Hash_set_intf *)
module Hash_set_intf = Base__Hash_set_intf

(** @canonical Base.Hashable *)
module Hashable = Base__Hashable

(** @canonical Base.Hashable_intf *)
module Hashable_intf = Base__Hashable_intf

(** @canonical Base.Hasher *)
module Hasher = Base__Hasher

(** @canonical Base.Hashtbl *)
module Hashtbl = Base__Hashtbl

(** @canonical Base.Hashtbl_intf *)
module Hashtbl_intf = Base__Hashtbl_intf

(** @canonical Base.Hex_lexer *)
module Hex_lexer = Base__Hex_lexer

(** @canonical Base.Identifiable *)
module Identifiable = Base__Identifiable

(** @canonical Base.Identifiable_intf *)
module Identifiable_intf = Base__Identifiable_intf

(** @canonical Base.Import *)
module Import = Base__Import

(** @canonical Base.Import0 *)
module Import0 = Base__Import0

(** @canonical Base.Indexed_container *)
module Indexed_container = Base__Indexed_container

(** @canonical Base.Indexed_container_intf *)
module Indexed_container_intf = Base__Indexed_container_intf

(** @canonical Base.Info *)
module Info = Base__Info

(** @canonical Base.Info_intf *)
module Info_intf = Base__Info_intf

(** @canonical Base.Int *)
module Int = Base__Int

(** @canonical Base.Int0 *)
module Int0 = Base__Int0

(** @canonical Base.Int32 *)
module Int32 = Base__Int32

(** @canonical Base.Int63 *)
module Int63 = Base__Int63

(** @canonical Base.Int63_emul *)
module Int63_emul = Base__Int63_emul

(** @canonical Base.Int64 *)
module Int64 = Base__Int64

(** @canonical Base.Int_conversions *)
module Int_conversions = Base__Int_conversions

(** @canonical Base.Int_intf *)
module Int_intf = Base__Int_intf

(** @canonical Base.Int_math *)
module Int_math = Base__Int_math

(** @canonical Base.Intable *)
module Intable = Base__Intable

(** @canonical Base.Invariant *)
module Invariant = Base__Invariant

(** @canonical Base.Invariant_intf *)
module Invariant_intf = Base__Invariant_intf

(** @canonical Base.Lazy *)
module Lazy = Base__Lazy

(** @canonical Base.Linked_queue *)
module Linked_queue = Base__Linked_queue

(** @canonical Base.Linked_queue0 *)
module Linked_queue0 = Base__Linked_queue0

(** @canonical Base.List *)
module List = Base__List

(** @canonical Base.List0 *)
module List0 = Base__List0

(** @canonical Base.List1 *)
module List1 = Base__List1

(** @canonical Base.Map *)
module Map = Base__Map

(** @canonical Base.Map_intf *)
module Map_intf = Base__Map_intf

(** @canonical Base.Maybe_bound *)
module Maybe_bound = Base__Maybe_bound

(** @canonical Base.Monad *)
module Monad = Base__Monad

(** @canonical Base.Monad_intf *)
module Monad_intf = Base__Monad_intf

(** @canonical Base.Nativeint *)
module Nativeint = Base__Nativeint

(** @canonical Base.Nothing *)
module Nothing = Base__Nothing

(** @canonical Base.Obj_array *)
module Obj_array = Base__Obj_array

(** @canonical Base.Obj_local *)
module Obj_local = Base__Obj_local

(** @canonical Base.Option *)
module Option = Base__Option

(** @canonical Base.Option_array *)
module Option_array = Base__Option_array

(** @canonical Base.Or_error *)
module Or_error = Base__Or_error

(** @canonical Base.Ordered_collection_common *)
module Ordered_collection_common = Base__Ordered_collection_common

(** @canonical Base.Ordered_collection_common0 *)
module Ordered_collection_common0 = Base__Ordered_collection_common0

(** @canonical Base.Ordering *)
module Ordering = Base__Ordering

(** @canonical Base.Poly0 *)
module Poly0 = Base__Poly0

(** @canonical Base.Popcount *)
module Popcount = Base__Popcount

(** @canonical Base.Pow_overflow_bounds *)
module Pow_overflow_bounds = Base__Pow_overflow_bounds

(** @canonical Base.Ppx_compare_lib *)
module Ppx_compare_lib = Base__Ppx_compare_lib

(** @canonical Base.Ppx_enumerate_lib *)
module Ppx_enumerate_lib = Base__Ppx_enumerate_lib

(** @canonical Base.Ppx_hash_lib *)
module Ppx_hash_lib = Base__Ppx_hash_lib

(** @canonical Base.Pretty_printer *)
module Pretty_printer = Base__Pretty_printer

(** @canonical Base.Printf *)
module Printf = Base__Printf

(** @canonical Base.Queue *)
module Queue = Base__Queue

(** @canonical Base.Queue_intf *)
module Queue_intf = Base__Queue_intf

(** @canonical Base.Random *)
module Random = Base__Random

(** @canonical Base.Random_repr *)
module Random_repr = Base__Random_repr

(** @canonical Base.Ref *)
module Ref = Base__Ref

(** @canonical Base.Result *)
module Result = Base__Result

(** @canonical Base.Sequence *)
module Sequence = Base__Sequence

(** @canonical Base.Set *)
module Set = Base__Set

(** @canonical Base.Set_intf *)
module Set_intf = Base__Set_intf

(** @canonical Base.Sexp *)
module Sexp = Base__Sexp

(** @canonical Base.Sexp_with_comparable *)
module Sexp_with_comparable = Base__Sexp_with_comparable

(** @canonical Base.Sexpable *)
module Sexpable = Base__Sexpable

(** @canonical Base.Sign *)
module Sign = Base__Sign

(** @canonical Base.Sign0 *)
module Sign0 = Base__Sign0

(** @canonical Base.Sign_or_nan *)
module Sign_or_nan = Base__Sign_or_nan

(** @canonical Base.Source_code_position *)
module Source_code_position = Base__Source_code_position

(** @canonical Base.Source_code_position0 *)
module Source_code_position0 = Base__Source_code_position0

(** @canonical Base.Stack *)
module Stack = Base__Stack

(** @canonical Base.Stack_intf *)
module Stack_intf = Base__Stack_intf

(** @canonical Base.Staged *)
module Staged = Base__Staged

(** @canonical Base.String *)
module String = Base__String

(** @canonical Base.String0 *)
module String0 = Base__String0

(** @canonical Base.Stringable *)
module Stringable = Base__Stringable

(** @canonical Base.Sys *)
module Sys = Base__Sys

(** @canonical Base.Sys0 *)
module Sys0 = Base__Sys0

(** @canonical Base.T *)
module T = Base__T

(** @canonical Base.Type_equal *)
module Type_equal = Base__Type_equal

(** @canonical Base.Uchar *)
module Uchar = Base__Uchar

(** @canonical Base.Uchar0 *)
module Uchar0 = Base__Uchar0

(** @canonical Base.Uniform_array *)
module Uniform_array = Base__Uniform_array

(** @canonical Base.Unit *)
module Unit = Base__Unit

(** @canonical Base.Variant *)
module Variant = Base__Variant

(** @canonical Base.Variantslib *)
module Variantslib = Base__Variantslib

(** @canonical Base.With_return *)
module With_return = Base__With_return

(** @canonical Base.Word_size *)
module Word_size = Base__Word_size
