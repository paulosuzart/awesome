module Do_not_use_directly = struct end
module Afl_instrument = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocaml_optcomp.Afl_instrument instead"]
module Alias_analysis = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocaml_optcomp.Alias_analysis instead"]
module Allocated_const = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocaml_optcomp.Allocated_const instead"]
module Annot = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated"]
module Arch = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocaml_optcomp.Arch instead"]
module Arg_helper = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocaml_common.Arg_helper instead"]
module Asmgen = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocaml_optcomp.Asmgen instead"]
module Asmlibrarian = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocaml_optcomp.Asmlibrarian instead"]
module Asmlink = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocaml_optcomp.Asmlink instead"]
module Asmpackager = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocaml_optcomp.Asmpackager instead"]
module Ast_helper = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocaml_common.Ast_helper instead"]
module Ast_invariants = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocaml_common.Ast_invariants instead"]
module Ast_iterator = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocaml_common.Ast_iterator instead"]
module Ast_mapper = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocaml_common.Ast_mapper instead"]
module Asttypes = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated"]
module Attr_helper = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocaml_common.Attr_helper instead"]
module Augment_specialised_args = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocaml_optcomp.Augment_specialised_args instead"]
module Backend_intf = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated"]
module Backend_var = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocaml_optcomp.Backend_var instead"]
module Binutils = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocaml_common.Binutils instead"]
module Branch_relaxation = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocaml_optcomp.Branch_relaxation instead"]
module Branch_relaxation_intf = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated"]
module Btype = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocaml_common.Btype instead"]
module Build_export_info = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocaml_optcomp.Build_export_info instead"]
module Build_path_prefix_map = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocaml_common.Build_path_prefix_map instead"]
module Builtin_attributes = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocaml_common.Builtin_attributes instead"]
module Bytegen = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocaml_bytecomp.Bytegen instead"]
module Bytelibrarian = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocaml_bytecomp.Bytelibrarian instead"]
module Bytelink = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocaml_bytecomp.Bytelink instead"]
module Bytepackager = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocaml_bytecomp.Bytepackager instead"]
module Bytesections = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocaml_common.Bytesections instead"]
module CSE = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocaml_optcomp.CSE instead"]
module CSEgen = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocaml_optcomp.CSEgen instead"]
module CamlinternalMenhirLib = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocaml_common.CamlinternalMenhirLib instead"]
module Ccomp = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocaml_common.Ccomp instead"]
module Clambda = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocaml_optcomp.Clambda instead"]
module Clambda_primitives = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocaml_optcomp.Clambda_primitives instead"]
module Clflags = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocaml_common.Clflags instead"]
module Closure = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocaml_optcomp.Closure instead"]
module Closure_conversion = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocaml_optcomp.Closure_conversion instead"]
module Closure_conversion_aux = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocaml_optcomp.Closure_conversion_aux instead"]
module Closure_element = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocaml_optcomp.Closure_element instead"]
module Closure_id = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocaml_optcomp.Closure_id instead"]
module Closure_middle_end = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocaml_optcomp.Closure_middle_end instead"]
module Closure_offsets = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocaml_optcomp.Closure_offsets instead"]
module Closure_origin = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocaml_optcomp.Closure_origin instead"]
module Cmi_format = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocaml_common.Cmi_format instead"]
module Cmm = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocaml_optcomp.Cmm instead"]
module Cmm_helpers = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocaml_optcomp.Cmm_helpers instead"]
module Cmm_invariants = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocaml_optcomp.Cmm_invariants instead"]
module Cmmgen = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocaml_optcomp.Cmmgen instead"]
module Cmmgen_state = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocaml_optcomp.Cmmgen_state instead"]
module Cmo_format = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated"]
module Cmt2annot = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocaml_common.Cmt2annot instead"]
module Cmt_format = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocaml_common.Cmt_format instead"]
module Cmx_format = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated"]
module Cmxs_format = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated"]
module Coloring = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocaml_optcomp.Coloring instead"]
module Comballoc = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocaml_optcomp.Comballoc instead"]
module Compenv = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocaml_common.Compenv instead"]
module Compilation_unit = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocaml_optcomp.Compilation_unit instead"]
module Compile = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocaml_bytecomp.Compile instead"]
module Compile_common = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocaml_common.Compile_common instead"]
module Compilenv = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocaml_optcomp.Compilenv instead"]
module Compmisc = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocaml_common.Compmisc instead"]
module Compression = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocaml_common.Compression instead"]
module Config = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocaml_common.Config instead"]
module Config_boot = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated"]
module Config_main = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated"]
module Consistbl = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocaml_common.Consistbl instead"]
module Convert_primitives = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocaml_optcomp.Convert_primitives instead"]
module Ctype = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocaml_common.Ctype instead"]
module Dataflow = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocaml_optcomp.Dataflow instead"]
module Datarepr = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocaml_common.Datarepr instead"]
module Deadcode = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocaml_optcomp.Deadcode instead"]
module Debuginfo = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocaml_common.Debuginfo instead"]
module Depend = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocaml_common.Depend instead"]
module Diffing = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocaml_common.Diffing instead"]
module Diffing_with_keys = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocaml_common.Diffing_with_keys instead"]
module Dll = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocaml_common.Dll instead"]
module Docstrings = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocaml_common.Docstrings instead"]
module Domainstate = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocaml_common.Domainstate instead"]
module Effect_analysis = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocaml_optcomp.Effect_analysis instead"]
module Emit = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocaml_optcomp.Emit instead"]
module Emitaux = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocaml_optcomp.Emitaux instead"]
module Emitcode = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocaml_bytecomp.Emitcode instead"]
module Emitenv = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated"]
module Env = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocaml_common.Env instead"]
module Envaux = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocaml_common.Envaux instead"]
module Errors = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocaml_bytecomp.Errors instead"]
module Errortrace = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocaml_common.Errortrace instead"]
module Export_id = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocaml_optcomp.Export_id instead"]
module Export_info = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocaml_optcomp.Export_info instead"]
module Export_info_for_pack = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocaml_optcomp.Export_info_for_pack instead"]
module Expunge = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated"]
module Extract_projections = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocaml_optcomp.Extract_projections instead"]
module Find_recursive_functions = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocaml_optcomp.Find_recursive_functions instead"]
module Flambda = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocaml_optcomp.Flambda instead"]
module Flambda_invariants = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocaml_optcomp.Flambda_invariants instead"]
module Flambda_iterators = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocaml_optcomp.Flambda_iterators instead"]
module Flambda_middle_end = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocaml_optcomp.Flambda_middle_end instead"]
module Flambda_to_clambda = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocaml_optcomp.Flambda_to_clambda instead"]
module Flambda_utils = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocaml_optcomp.Flambda_utils instead"]
module Freshening = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocaml_optcomp.Freshening instead"]
module Genprintval = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocaml_toplevel.Genprintval instead"]
module Id_types = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocaml_optcomp.Id_types instead"]
module Ident = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocaml_common.Ident instead"]
module Identifiable = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocaml_common.Identifiable instead"]
module Import_approx = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocaml_optcomp.Import_approx instead"]
module Includeclass = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocaml_common.Includeclass instead"]
module Includecore = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocaml_common.Includecore instead"]
module Includemod = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocaml_common.Includemod instead"]
module Includemod_errorprinter = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocaml_common.Includemod_errorprinter instead"]
module Inconstant_idents = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocaml_optcomp.Inconstant_idents instead"]
module Initialize_symbol_to_let_symbol = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocaml_optcomp.Initialize_symbol_to_let_symbol instead"]
module Inline_and_simplify = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocaml_optcomp.Inline_and_simplify instead"]
module Inline_and_simplify_aux = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocaml_optcomp.Inline_and_simplify_aux instead"]
module Inlining_cost = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocaml_optcomp.Inlining_cost instead"]
module Inlining_decision = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocaml_optcomp.Inlining_decision instead"]
module Inlining_decision_intf = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated"]
module Inlining_stats = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocaml_optcomp.Inlining_stats instead"]
module Inlining_stats_types = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocaml_optcomp.Inlining_stats_types instead"]
module Inlining_transforms = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocaml_optcomp.Inlining_transforms instead"]
module Instruct = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocaml_bytecomp.Instruct instead"]
module Int_replace_polymorphic_compare = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocaml_common.Int_replace_polymorphic_compare instead"]
module Interf = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocaml_optcomp.Interf instead"]
module Internal_variable_names = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocaml_optcomp.Internal_variable_names instead"]
module Interval = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocaml_optcomp.Interval instead"]
module Invariant_params = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocaml_optcomp.Invariant_params instead"]
module Lambda = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocaml_common.Lambda instead"]
module Lazy_backtrack = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocaml_common.Lazy_backtrack instead"]
module Lexer = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocaml_common.Lexer instead"]
module Lift_code = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocaml_optcomp.Lift_code instead"]
module Lift_constants = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocaml_optcomp.Lift_constants instead"]
module Lift_let_to_initialize_symbol = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocaml_optcomp.Lift_let_to_initialize_symbol instead"]
module Linear = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocaml_optcomp.Linear instead"]
module Linear_format = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocaml_optcomp.Linear_format instead"]
module Linearize = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocaml_optcomp.Linearize instead"]
module Linkage_name = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocaml_optcomp.Linkage_name instead"]
module Linscan = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocaml_optcomp.Linscan instead"]
module Liveness = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocaml_optcomp.Liveness instead"]
module Load_path = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocaml_common.Load_path instead"]
module Local_store = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocaml_common.Local_store instead"]
module Location = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocaml_common.Location instead"]
module Longident = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocaml_common.Longident instead"]
module Mach = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocaml_optcomp.Mach instead"]
module Main = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated"]
module Main_args = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocaml_common.Main_args instead"]
module Maindriver = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocaml_bytecomp.Maindriver instead"]
module Makedepend = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocaml_common.Makedepend instead"]
module Matching = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocaml_common.Matching instead"]
module Meta = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocaml_common.Meta instead"]
module Misc = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocaml_common.Misc instead"]
module Mtype = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocaml_common.Mtype instead"]
module Mutable_variable = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocaml_optcomp.Mutable_variable instead"]
module Numbers = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocaml_common.Numbers instead"]
module Opcodes = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocaml_common.Opcodes instead"]
module Oprint = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocaml_common.Oprint instead"]
module Optcompile = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocaml_optcomp.Optcompile instead"]
module Opterrors = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocaml_optcomp.Opterrors instead"]
module Optmain = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated"]
module Optmaindriver = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocaml_optcomp.Optmaindriver instead"]
module Outcometree = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated"]
module Parameter = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocaml_optcomp.Parameter instead"]
module Parmatch = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocaml_common.Parmatch instead"]
module Parse = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocaml_common.Parse instead"]
module Parser = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocaml_common.Parser instead"]
module Parsetree = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated"]
module Pass_wrapper = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocaml_optcomp.Pass_wrapper instead"]
module Path = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocaml_common.Path instead"]
module Patterns = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocaml_common.Patterns instead"]
module Persistent_env = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocaml_common.Persistent_env instead"]
module Polling = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocaml_optcomp.Polling instead"]
module Pparse = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocaml_common.Pparse instead"]
module Pprintast = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocaml_common.Pprintast instead"]
module Predef = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocaml_common.Predef instead"]
module Primitive = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocaml_common.Primitive instead"]
module Printast = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocaml_common.Printast instead"]
module Printclambda = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocaml_optcomp.Printclambda instead"]
module Printclambda_primitives = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocaml_optcomp.Printclambda_primitives instead"]
module Printcmm = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocaml_optcomp.Printcmm instead"]
module Printinstr = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocaml_bytecomp.Printinstr instead"]
module Printlambda = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocaml_common.Printlambda instead"]
module Printlinear = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocaml_optcomp.Printlinear instead"]
module Printmach = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocaml_optcomp.Printmach instead"]
module Printpat = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocaml_common.Printpat instead"]
module Printtyp = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocaml_common.Printtyp instead"]
module Printtyped = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocaml_common.Printtyped instead"]
module Proc = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocaml_optcomp.Proc instead"]
module Profile = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocaml_common.Profile instead"]
module Projection = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocaml_optcomp.Projection instead"]
module Rec_check = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocaml_common.Rec_check instead"]
module Ref_to_variables = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocaml_optcomp.Ref_to_variables instead"]
module Reg = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocaml_optcomp.Reg instead"]
module Reload = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocaml_optcomp.Reload instead"]
module Reloadgen = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocaml_optcomp.Reloadgen instead"]
module Remove_free_vars_equal_to_args = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocaml_optcomp.Remove_free_vars_equal_to_args instead"]
module Remove_unused_arguments = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocaml_optcomp.Remove_unused_arguments instead"]
module Remove_unused_closure_vars = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocaml_optcomp.Remove_unused_closure_vars instead"]
module Remove_unused_program_constructs = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocaml_optcomp.Remove_unused_program_constructs instead"]
module Runtimedef = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocaml_common.Runtimedef instead"]
module Schedgen = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocaml_optcomp.Schedgen instead"]
module Scheduling = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocaml_optcomp.Scheduling instead"]
module Selectgen = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocaml_optcomp.Selectgen instead"]
module Selection = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocaml_optcomp.Selection instead"]
module Semantics_of_primitives = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocaml_optcomp.Semantics_of_primitives instead"]
module Set_of_closures_id = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocaml_optcomp.Set_of_closures_id instead"]
module Set_of_closures_origin = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocaml_optcomp.Set_of_closures_origin instead"]
module Shape = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocaml_common.Shape instead"]
module Share_constants = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocaml_optcomp.Share_constants instead"]
module Signature_group = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocaml_common.Signature_group instead"]
module Simple_value_approx = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocaml_optcomp.Simple_value_approx instead"]
module Simplif = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocaml_common.Simplif instead"]
module Simplify_boxed_integer_ops = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocaml_optcomp.Simplify_boxed_integer_ops instead"]
module Simplify_boxed_integer_ops_intf = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated"]
module Simplify_common = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocaml_optcomp.Simplify_common instead"]
module Simplify_primitives = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocaml_optcomp.Simplify_primitives instead"]
module Spill = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocaml_optcomp.Spill instead"]
module Split = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocaml_optcomp.Split instead"]
module Static_exception = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocaml_optcomp.Static_exception instead"]
module Strmatch = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocaml_optcomp.Strmatch instead"]
module Strongly_connected_components = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocaml_common.Strongly_connected_components instead"]
module Stypes = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocaml_common.Stypes instead"]
module Subst = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocaml_common.Subst instead"]
module Switch = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocaml_common.Switch instead"]
module Symbol = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocaml_optcomp.Symbol instead"]
module Symtable = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocaml_common.Symtable instead"]
module Syntaxerr = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocaml_common.Syntaxerr instead"]
module Tag = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocaml_optcomp.Tag instead"]
module Targetint = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocaml_common.Targetint instead"]
module Tast_iterator = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocaml_common.Tast_iterator instead"]
module Tast_mapper = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocaml_common.Tast_mapper instead"]
module Terminfo = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocaml_common.Terminfo instead"]
module Tmc = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocaml_common.Tmc instead"]
module Topcommon = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocaml_toplevel.Topcommon instead"]
module Topdirs = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocaml_toplevel.Topdirs instead"]
module Topeval = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocaml_toplevel.Topeval instead"]
module Tophooks = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated"]
module Toploop = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocaml_toplevel.Toploop instead"]
module Topmain = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocaml_toplevel.Topmain instead"]
module Topprinters = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocaml_toplevel.Topprinters instead"]
module Topstart = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated"]
module Trace = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocaml_toplevel.Trace instead"]
module Translattribute = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocaml_common.Translattribute instead"]
module Translclass = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocaml_common.Translclass instead"]
module Translcore = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocaml_common.Translcore instead"]
module Translmod = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocaml_common.Translmod instead"]
module Translobj = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocaml_common.Translobj instead"]
module Translprim = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocaml_common.Translprim instead"]
module Traverse_for_exported_symbols = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocaml_optcomp.Traverse_for_exported_symbols instead"]
module Type_immediacy = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocaml_common.Type_immediacy instead"]
module Typeclass = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocaml_common.Typeclass instead"]
module Typecore = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocaml_common.Typecore instead"]
module Typedecl = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocaml_common.Typedecl instead"]
module Typedecl_immediacy = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocaml_common.Typedecl_immediacy instead"]
module Typedecl_properties = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocaml_common.Typedecl_properties instead"]
module Typedecl_separability = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocaml_common.Typedecl_separability instead"]
module Typedecl_unboxed = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocaml_common.Typedecl_unboxed instead"]
module Typedecl_variance = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocaml_common.Typedecl_variance instead"]
module Typedtree = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocaml_common.Typedtree instead"]
module Typemod = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocaml_common.Typemod instead"]
module Typeopt = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocaml_common.Typeopt instead"]
module Types = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocaml_common.Types instead"]
module Typetexp = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocaml_common.Typetexp instead"]
module Un_anf = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocaml_optcomp.Un_anf instead"]
module Unbox_closures = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocaml_optcomp.Unbox_closures instead"]
module Unbox_free_vars_of_closures = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocaml_optcomp.Unbox_free_vars_of_closures instead"]
module Unbox_specialised_args = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocaml_optcomp.Unbox_specialised_args instead"]
module Untypeast = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocaml_common.Untypeast instead"]
module Var_within_closure = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocaml_optcomp.Var_within_closure instead"]
module Variable = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocaml_optcomp.Variable instead"]
module Warnings = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocaml_common.Warnings instead"]
module X86_ast = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated"]
module X86_dsl = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocaml_optcomp.X86_dsl instead"]
module X86_gas = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocaml_optcomp.X86_gas instead"]
module X86_masm = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocaml_optcomp.X86_masm instead"]
module X86_proc = Do_not_use_directly [@@deprecated "Accessing this module directly is deprecated, use Ocaml_optcomp.X86_proc instead"]
