.\" Copyright (C) 2022 Jens Axboe <axboe@kernel.dk>
.\"
.\" SPDX-License-Identifier: LGPL-2.0-or-later
.\"
.TH io_uring_prep_send 3 "March 12, 2022" "liburing-2.2" "liburing Manual"
.SH NAME
io_uring_prep_send \- prepare a send request
.SH SYNOPSIS
.nf
.B #include <liburing.h>
.PP
.BI "void io_uring_prep_send(struct io_uring_sqe *" sqe ","
.BI "                        int " sockfd ","
.BI "                        const void *" buf ","
.BI "                        size_t " len ","
.BI "                        int " flags ");"
.PP
.BI "void io_uring_prep_sendto(struct io_uring_sqe *" sqe ","
.BI "                          int " sockfd ","
.BI "                          const void *" buf ","
.BI "                          size_t " len ","
.BI "                          int " flags ","
.BI "                          const struct sockaddr *" addr ","
.BI "                          socklen_t " addrlen ");"
.fi
.SH DESCRIPTION
.PP
The
.BR io_uring_prep_send (3)
function prepares a send request. The submission queue entry
.I sqe
is setup to use the file descriptor
.I sockfd
to start sending the data from
.I buf
of size
.I len
bytes and with modifier flags
.IR flags .

Note that using
.B IOSQE_IO_LINK
with this request type requires the setting of
.B MSG_WAITALL
in the
.IR flags
argument, as a short send isn't a considered an error condition without
that being set.

This function prepares an async
.BR send (2)
request. See that man page for details.

The
.BR io_uring_prep_sendto (3)
function prepares a sendto request. The submission queue entry
.I sqe
is setup to use the file descriptor
.I sockfd
to start sending the data from
.I buf
of size
.I len
bytes and with modifier flags
.IR flags .
The destination address is specified by
.I addr
and
.I addrlen
and must be a valid address for the socket type.

This function prepares an async
.BR sendto (2)
request. See that man page for details.

.SH RETURN VALUE
None
.SH ERRORS
The CQE
.I res
field will contain the result of the operation. See the related man page for
details on possible values. Note that where synchronous system calls will return
.B -1
on failure and set
.I errno
to the actual error value, io_uring never uses
.IR errno .
Instead it returns the negated
.I errno
directly in the CQE
.I res
field.
.SH SEE ALSO
.BR io_uring_get_sqe (3),
.BR io_uring_submit (3),
.BR send (2)
.BR sendto (2)
