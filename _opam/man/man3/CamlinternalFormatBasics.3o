.TH "CamlinternalFormatBasics" 3 2024-04-07 OCamldoc "OCaml library"
.SH NAME
CamlinternalFormatBasics \- no description
.SH Module
Module   CamlinternalFormatBasics
.SH Documentation
.sp
Module
.BI "CamlinternalFormatBasics"
 : 
.B sig end

.sp

.sp

.sp
.sp
.I type padty 
=
 | Left
 | Right
 | Zeros
 
.sp

.sp
.I type int_conv 
=
 | Int_d
 | Int_pd
 | Int_sd
 | Int_i
 | Int_pi
 | Int_si
 | Int_x
 | Int_Cx
 | Int_X
 | Int_CX
 | Int_o
 | Int_Co
 | Int_u
 | Int_Cd
 | Int_Ci
 | Int_Cu
 
.sp

.sp
.I type float_flag_conv 
=
 | Float_flag_
 | Float_flag_p
 | Float_flag_s
 
.sp

.sp
.I type float_kind_conv 
=
 | Float_f
 | Float_e
 | Float_E
 | Float_g
 | Float_G
 | Float_F
 | Float_h
 | Float_H
 | Float_CF
 
.sp

.sp
.I type float_conv 
= 
.B float_flag_conv *
.B   float_kind_conv

.sp

.sp
.I type char_set 
= 
.B string

.sp

.sp
.I type counter 
=
 | Line_counter
 | Char_counter
 | Token_counter
 
.sp

.sp
.I type 
.B ('a, 'b)
.I padding 
=
 | No_padding
.B : 
.B ('a0, 'a0) padding
 | Lit_padding
.B : 
.B padty * int
.B -> 
.B ('a1, 'a1) padding
 | Arg_padding
.B : 
.B padty
.B -> 
.B (int -> 'a2, 'a2) padding
 
.sp

.sp
.I type pad_option 
= 
.B int option

.sp

.sp
.I type 
.B ('a, 'b)
.I precision 
=
 | No_precision
.B : 
.B ('a0, 'a0) precision
 | Lit_precision
.B : 
.B int
.B -> 
.B ('a1, 'a1) precision
 | Arg_precision
.B : 
.B (int -> 'a2, 'a2) precision
 
.sp

.sp
.I type prec_option 
= 
.B int option

.sp

.sp
.I type 
.B ('a, 'b, 'c)
.I custom_arity 
=
 | Custom_zero
.B : 
.B ('a0, string, 'a0) custom_arity
 | Custom_succ
.B : 
.B ('a1, 'b0, 'c0) custom_arity
.B -> 
.B ('a1, 'x -> 'b0, 'x -> 'c0) custom_arity
 
.sp

.sp
.I type block_type 
=
 | Pp_hbox
 | Pp_vbox
 | Pp_hvbox
 | Pp_hovbox
 | Pp_box
 | Pp_fits
 
.sp

.sp
.I type formatting_lit 
=
 | Close_box
 | Close_tag
 | Break
.B of 
.B string * int * int
 | FFlush
 | Force_newline
 | Flush_newline
 | Magic_size
.B of 
.B string * int
 | Escaped_at
 | Escaped_percent
 | Scan_indic
.B of 
.B char
 
.sp

.sp
.I type 
.B ('a, 'b, 'c, 'd, 'e, 'f)
.I formatting_gen 
=
 | Open_tag
.B : 
.B ('a0, 'b0, 'c0, 'd0, 'e0, 'f0) format6
.B -> 
.B ('a0, 'b0, 'c0, 'd0, 'e0, 'f0) formatting_gen
 | Open_box
.B : 
.B ('a1, 'b1, 'c1, 'd1, 'e1, 'f1) format6
.B -> 
.B ('a1, 'b1, 'c1, 'd1, 'e1, 'f1) formatting_gen
 
.sp

.sp
.I type 
.B ('a, 'b, 'c, 'd, 'e, 'f)
.I fmtty 
= 
.B ('a, 'b, 'c, 'd, 'e, 'f, 'a, 'b, 'c, 'd, 'e, 'f)
.B   fmtty_rel

.sp

.sp
.I type 
.B ('a1, 'b1, 'c1, 'd1, 'e1, 'f1, 'a2, 'b2, 'c2, 'd2, 'e2, 'f2)
.I fmtty_rel 
=
 | Char_ty
.B : 
.B ('a10, 'b10, 'c10, 'd10, 'e10, 'f10, 'a20, 'b20, 'c20, 'd20, 'e20, 'f20)
.B fmtty_rel
.B -> 
.B (char -> 'a10, 'b10, 'c10, 'd10, 'e10, 'f10, char -> 'a20, 'b20, 'c20, 'd20,
.B    'e20, 'f20)
.B   fmtty_rel
 | String_ty
.B : 
.B ('a11, 'b11, 'c11, 'd11, 'e11, 'f11, 'a21, 'b21, 'c21, 'd21, 'e21, 'f21)
.B fmtty_rel
.B -> 
.B (string -> 'a11, 'b11, 'c11, 'd11, 'e11, 'f11, string -> 'a21, 'b21, 'c21,
.B    'd21, 'e21, 'f21)
.B   fmtty_rel
 | Int_ty
.B : 
.B ('a12, 'b12, 'c12, 'd12, 'e12, 'f12, 'a22, 'b22, 'c22, 'd22, 'e22, 'f22)
.B fmtty_rel
.B -> 
.B (int -> 'a12, 'b12, 'c12, 'd12, 'e12, 'f12, int -> 'a22, 'b22, 'c22, 'd22,
.B    'e22, 'f22)
.B   fmtty_rel
 | Int32_ty
.B : 
.B ('a13, 'b13, 'c13, 'd13, 'e13, 'f13, 'a23, 'b23, 'c23, 'd23, 'e23, 'f23)
.B fmtty_rel
.B -> 
.B (int32 -> 'a13, 'b13, 'c13, 'd13, 'e13, 'f13, int32 -> 'a23, 'b23, 'c23,
.B    'd23, 'e23, 'f23)
.B   fmtty_rel
 | Nativeint_ty
.B : 
.B ('a14, 'b14, 'c14, 'd14, 'e14, 'f14, 'a24, 'b24, 'c24, 'd24, 'e24, 'f24)
.B fmtty_rel
.B -> 
.B (nativeint -> 'a14, 'b14, 'c14, 'd14, 'e14, 'f14, nativeint -> 'a24, 'b24,
.B    'c24, 'd24, 'e24, 'f24)
.B   fmtty_rel
 | Int64_ty
.B : 
.B ('a15, 'b15, 'c15, 'd15, 'e15, 'f15, 'a25, 'b25, 'c25, 'd25, 'e25, 'f25)
.B fmtty_rel
.B -> 
.B (int64 -> 'a15, 'b15, 'c15, 'd15, 'e15, 'f15, int64 -> 'a25, 'b25, 'c25,
.B    'd25, 'e25, 'f25)
.B   fmtty_rel
 | Float_ty
.B : 
.B ('a16, 'b16, 'c16, 'd16, 'e16, 'f16, 'a26, 'b26, 'c26, 'd26, 'e26, 'f26)
.B fmtty_rel
.B -> 
.B (float -> 'a16, 'b16, 'c16, 'd16, 'e16, 'f16, float -> 'a26, 'b26, 'c26,
.B    'd26, 'e26, 'f26)
.B   fmtty_rel
 | Bool_ty
.B : 
.B ('a17, 'b17, 'c17, 'd17, 'e17, 'f17, 'a27, 'b27, 'c27, 'd27, 'e27, 'f27)
.B fmtty_rel
.B -> 
.B (bool -> 'a17, 'b17, 'c17, 'd17, 'e17, 'f17, bool -> 'a27, 'b27, 'c27, 'd27,
.B    'e27, 'f27)
.B   fmtty_rel
 | Format_arg_ty
.B : 
.B ('g, 'h, 'i, 'j, 'k, 'l) fmtty
.B    * ('a18, 'b18, 'c18, 'd18, 'e18, 'f18, 'a28, 'b28, 'c28, 'd28, 'e28, 'f28)
.B      fmtty_rel
.B -> 
.B (('g, 'h, 'i, 'j, 'k, 'l) format6 -> 'a18, 'b18,
.B    'c18, 'd18, 'e18, 'f18,
.B    ('g, 'h, 'i, 'j, 'k, 'l) format6 -> 'a28, 'b28,
.B    'c28, 'd28, 'e28, 'f28)
.B   fmtty_rel
 | Format_subst_ty
.B : 
.B ('g0, 'h0, 'i0, 'j0, 'k0, 'l0, 'g1, 'b19, 'c19, 'j1, 'd19, 'a19)
.B fmtty_rel
.B    * ('g0, 'h0, 'i0, 'j0, 'k0, 'l0, 'g2, 'b29, 'c29, 'j2, 'd29, 'a29)
.B      fmtty_rel
.B    * ('a19, 'b19, 'c19, 'd19, 'e19, 'f19, 'a29, 'b29, 'c29, 'd29, 'e29, 'f29)
.B      fmtty_rel
.B -> 
.B (('g0, 'h0, 'i0, 'j0, 'k0, 'l0) format6 -> 'g1,
.B    'b19, 'c19, 'j1, 'e19, 'f19,
.B    ('g0, 'h0, 'i0, 'j0, 'k0, 'l0) format6 -> 'g2,
.B    'b29, 'c29, 'j2, 'e29, 'f29)
.B   fmtty_rel
 | Alpha_ty
.B : 
.B ('a110, 'b110, 'c110, 'd110, 'e110, 'f110, 'a210, 'b210, 'c210, 'd210, 'e210,
.B  'f210)
.B fmtty_rel
.B -> 
.B (('b110 -> 'x -> 'c110) -> 'x -> 'a110, 'b110, 'c110, 'd110, 'e110, 'f110,
.B    ('b210 -> 'x -> 'c210) -> 'x -> 'a210, 'b210, 'c210, 'd210, 'e210, 'f210)
.B   fmtty_rel
 | Theta_ty
.B : 
.B ('a111, 'b111, 'c111, 'd111, 'e111, 'f111, 'a211, 'b211, 'c211, 'd211, 'e211,
.B  'f211)
.B fmtty_rel
.B -> 
.B (('b111 -> 'c111) -> 'a111, 'b111, 'c111, 'd111, 'e111, 'f111,
.B    ('b211 -> 'c211) -> 'a211, 'b211, 'c211, 'd211, 'e211, 'f211)
.B   fmtty_rel
 | Any_ty
.B : 
.B ('a112, 'b112, 'c112, 'd112, 'e112, 'f112, 'a212, 'b212, 'c212, 'd212, 'e212,
.B  'f212)
.B fmtty_rel
.B -> 
.B ('x0 -> 'a112, 'b112, 'c112, 'd112, 'e112, 'f112, 'x0 -> 'a212, 'b212, 'c212,
.B    'd212, 'e212, 'f212)
.B   fmtty_rel
 | Reader_ty
.B : 
.B ('a113, 'b113, 'c113, 'd113, 'e113, 'f113, 'a213, 'b213, 'c213, 'd213, 'e213,
.B  'f213)
.B fmtty_rel
.B -> 
.B ('x1 -> 'a113, 'b113, 'c113, ('b113 -> 'x1) -> 'd113, 'e113, 'f113,
.B    'x1 -> 'a213, 'b213, 'c213, ('b213 -> 'x1) -> 'd213, 'e213, 'f213)
.B   fmtty_rel
 | Ignored_reader_ty
.B : 
.B ('a114, 'b114, 'c114, 'd114, 'e114, 'f114, 'a214, 'b214, 'c214, 'd214, 'e214,
.B  'f214)
.B fmtty_rel
.B -> 
.B ('a114, 'b114, 'c114, ('b114 -> 'x2) -> 'd114, 'e114, 'f114, 'a214, 'b214,
.B    'c214, ('b214 -> 'x2) -> 'd214, 'e214, 'f214)
.B   fmtty_rel
 | End_of_fmtty
.B : 
.B ('f115, 'b115, 'c115, 'd115, 'd115, 'f115, 'f215, 'b215, 'c215, 'd215, 'd215,
.B    'f215)
.B   fmtty_rel
 
.sp

.sp
.I type 
.B ('a, 'b, 'c, 'd, 'e, 'f)
.I fmt 
=
 | Char
.B : 
.B ('a0, 'b0, 'c0, 'd0, 'e0, 'f0) fmt
.B -> 
.B (char -> 'a0, 'b0, 'c0, 'd0, 'e0, 'f0) fmt
 | Caml_char
.B : 
.B ('a1, 'b1, 'c1, 'd1, 'e1, 'f1) fmt
.B -> 
.B (char -> 'a1, 'b1, 'c1, 'd1, 'e1, 'f1) fmt
 | String
.B : 
.B ('x, string -> 'a2) padding
.B    * ('a2, 'b2, 'c2, 'd2, 'e2, 'f2) fmt
.B -> 
.B ('x, 'b2, 'c2, 'd2, 'e2, 'f2) fmt
 | Caml_string
.B : 
.B ('x0, string -> 'a3) padding
.B    * ('a3, 'b3, 'c3, 'd3, 'e3, 'f3) fmt
.B -> 
.B ('x0, 'b3, 'c3, 'd3, 'e3, 'f3) fmt
 | Int
.B : 
.B int_conv
.B    * ('x1, 'y) padding
.B    * ('y, int -> 'a4) precision
.B    * ('a4, 'b4, 'c4, 'd4, 'e4, 'f4) fmt
.B -> 
.B ('x1, 'b4, 'c4, 'd4, 'e4, 'f4) fmt
 | Int32
.B : 
.B int_conv
.B    * ('x2, 'y0) padding
.B    * ('y0, int32 -> 'a5) precision
.B    * ('a5, 'b5, 'c5, 'd5, 'e5, 'f5) fmt
.B -> 
.B ('x2, 'b5, 'c5, 'd5, 'e5, 'f5) fmt
 | Nativeint
.B : 
.B int_conv
.B    * ('x3, 'y1) padding
.B    * ('y1, nativeint -> 'a6) precision
.B    * ('a6, 'b6, 'c6, 'd6, 'e6, 'f6) fmt
.B -> 
.B ('x3, 'b6, 'c6, 'd6, 'e6, 'f6) fmt
 | Int64
.B : 
.B int_conv
.B    * ('x4, 'y2) padding
.B    * ('y2, int64 -> 'a7) precision
.B    * ('a7, 'b7, 'c7, 'd7, 'e7, 'f7) fmt
.B -> 
.B ('x4, 'b7, 'c7, 'd7, 'e7, 'f7) fmt
 | Float
.B : 
.B float_conv
.B    * ('x5, 'y3) padding
.B    * ('y3, float -> 'a8) precision
.B    * ('a8, 'b8, 'c8, 'd8, 'e8, 'f8) fmt
.B -> 
.B ('x5, 'b8, 'c8, 'd8, 'e8, 'f8) fmt
 | Bool
.B : 
.B ('x6, bool -> 'a9) padding
.B    * ('a9, 'b9, 'c9, 'd9, 'e9, 'f9) fmt
.B -> 
.B ('x6, 'b9, 'c9, 'd9, 'e9, 'f9) fmt
 | Flush
.B : 
.B ('a10, 'b10, 'c10, 'd10, 'e10, 'f10) fmt
.B -> 
.B ('a10, 'b10, 'c10, 'd10, 'e10, 'f10) fmt
 | String_literal
.B : 
.B string * ('a11, 'b11, 'c11, 'd11, 'e11, 'f11) fmt
.B -> 
.B ('a11, 'b11, 'c11, 'd11, 'e11, 'f11) fmt
 | Char_literal
.B : 
.B char * ('a12, 'b12, 'c12, 'd12, 'e12, 'f12) fmt
.B -> 
.B ('a12, 'b12, 'c12, 'd12, 'e12, 'f12) fmt
 | Format_arg
.B : 
.B pad_option
.B    * ('g, 'h, 'i, 'j, 'k, 'l) fmtty
.B    * ('a13, 'b13, 'c13, 'd13, 'e13, 'f13) fmt
.B -> 
.B (('g, 'h, 'i, 'j, 'k, 'l) format6 -> 'a13, 'b13,
.B    'c13, 'd13, 'e13, 'f13)
.B   fmt
 | Format_subst
.B : 
.B pad_option
.B    * ('g0, 'h0, 'i0, 'j0, 'k0, 'l0, 'g2, 'b14, 'c14, 'j2, 'd14, 'a14)
.B      fmtty_rel
.B    * ('a14, 'b14, 'c14, 'd14, 'e14, 'f14) fmt
.B -> 
.B (('g0, 'h0, 'i0, 'j0, 'k0, 'l0) format6 -> 'g2,
.B    'b14, 'c14, 'j2, 'e14, 'f14)
.B   fmt
 | Alpha
.B : 
.B ('a15, 'b15, 'c15, 'd15, 'e15, 'f15) fmt
.B -> 
.B (('b15 -> 'x7 -> 'c15) -> 'x7 -> 'a15, 'b15, 'c15, 'd15, 'e15, 'f15)
.B   fmt
 | Theta
.B : 
.B ('a16, 'b16, 'c16, 'd16, 'e16, 'f16) fmt
.B -> 
.B (('b16 -> 'c16) -> 'a16, 'b16, 'c16, 'd16, 'e16, 'f16)
.B   fmt
 | Formatting_lit
.B : 
.B formatting_lit
.B    * ('a17, 'b17, 'c17, 'd17, 'e17, 'f17) fmt
.B -> 
.B ('a17, 'b17, 'c17, 'd17, 'e17, 'f17) fmt
 | Formatting_gen
.B : 
.B ('a18, 'b18, 'c18, 'd18, 'e18, 'f18) formatting_gen
.B    * ('f18, 'b18, 'c18, 'e18, 'e20, 'f20) fmt
.B -> 
.B ('a18, 'b18, 'c18, 'd18, 'e20, 'f20) fmt
 | Reader
.B : 
.B ('a19, 'b19, 'c19, 'd19, 'e19, 'f19) fmt
.B -> 
.B ('x8 -> 'a19, 'b19, 'c19, ('b19 -> 'x8) -> 'd19, 'e19, 'f19)
.B   fmt
 | Scan_char_set
.B : 
.B pad_option * char_set
.B    * ('a20, 'b20, 'c20, 'd20, 'e21, 'f21) fmt
.B -> 
.B (string -> 'a20, 'b20, 'c20, 'd20, 'e21, 'f21) fmt
 | Scan_get_counter
.B : 
.B counter
.B    * ('a21, 'b21, 'c21, 'd21, 'e22, 'f22) fmt
.B -> 
.B (int -> 'a21, 'b21, 'c21, 'd21, 'e22, 'f22) fmt
 | Scan_next_char
.B : 
.B ('a22, 'b22, 'c22, 'd22, 'e23, 'f23) fmt
.B -> 
.B (char -> 'a22, 'b22, 'c22, 'd22, 'e23, 'f23) fmt
 | Ignored_param
.B : 
.B ('a23, 'b23, 'c23, 'd23, 'y4, 'x9) ignored
.B    * ('x9, 'b23, 'c23, 'y4, 'e24, 'f24) fmt
.B -> 
.B ('a23, 'b23, 'c23, 'd23, 'e24, 'f24) fmt
 | Custom
.B : 
.B ('a24, 'x10, 'y5) custom_arity * (unit -> 'x10)
.B    * ('a24, 'b24, 'c24, 'd24, 'e25, 'f25) fmt
.B -> 
.B ('y5, 'b24, 'c24, 'd24, 'e25, 'f25) fmt
 | End_of_format
.B : 
.B ('f26, 'b25, 'c25, 'e26, 'e26, 'f26) fmt
 
.sp
List of format elements\&.

.sp
.I type 
.B ('a, 'b, 'c, 'd, 'e, 'f)
.I ignored 
=
 | Ignored_char
.B : 
.B ('a0, 'b0, 'c0, 'd0, 'd0, 'a0) ignored
 | Ignored_caml_char
.B : 
.B ('a1, 'b1, 'c1, 'd1, 'd1, 'a1) ignored
 | Ignored_string
.B : 
.B pad_option
.B -> 
.B ('a2, 'b2, 'c2, 'd2, 'd2, 'a2) ignored
 | Ignored_caml_string
.B : 
.B pad_option
.B -> 
.B ('a3, 'b3, 'c3, 'd3, 'd3, 'a3) ignored
 | Ignored_int
.B : 
.B int_conv * pad_option
.B -> 
.B ('a4, 'b4, 'c4, 'd4, 'd4, 'a4) ignored
 | Ignored_int32
.B : 
.B int_conv * pad_option
.B -> 
.B ('a5, 'b5, 'c5, 'd5, 'd5, 'a5) ignored
 | Ignored_nativeint
.B : 
.B int_conv * pad_option
.B -> 
.B ('a6, 'b6, 'c6, 'd6, 'd6, 'a6) ignored
 | Ignored_int64
.B : 
.B int_conv * pad_option
.B -> 
.B ('a7, 'b7, 'c7, 'd7, 'd7, 'a7) ignored
 | Ignored_float
.B : 
.B pad_option * prec_option
.B -> 
.B ('a8, 'b8, 'c8, 'd8, 'd8, 'a8) ignored
 | Ignored_bool
.B : 
.B pad_option
.B -> 
.B ('a9, 'b9, 'c9, 'd9, 'd9, 'a9) ignored
 | Ignored_format_arg
.B : 
.B pad_option
.B    * ('g, 'h, 'i, 'j, 'k, 'l) fmtty
.B -> 
.B ('a10, 'b10, 'c10, 'd10, 'd10, 'a10) ignored
 | Ignored_format_subst
.B : 
.B pad_option
.B    * ('a11, 'b11, 'c11, 'd11, 'e0, 'f0) fmtty
.B -> 
.B ('a11, 'b11, 'c11, 'd11, 'e0, 'f0) ignored
 | Ignored_reader
.B : 
.B ('a12, 'b12, 'c12, ('b12 -> 'x) -> 'd12, 'd12, 'a12)
.B   ignored
 | Ignored_scan_char_set
.B : 
.B pad_option * char_set
.B -> 
.B ('a13, 'b13, 'c13, 'd13, 'd13, 'a13) ignored
 | Ignored_scan_get_counter
.B : 
.B counter
.B -> 
.B ('a14, 'b14, 'c14, 'd14, 'd14, 'a14) ignored
 | Ignored_scan_next_char
.B : 
.B ('a15, 'b15, 'c15, 'd15, 'd15, 'a15) ignored
 
.sp

.sp
.I type 
.B ('a, 'b, 'c, 'd, 'e, 'f)
.I format6 
=
 | Format
.B of 
.B ('a, 'b, 'c, 'd, 'e, 'f) fmt * string
 
.sp

.sp

.I val concat_fmtty 
: 
.B ('g1, 'b1, 'c1, 'j1, 'd1, 'a1, 'g2, 'b2, 'c2, 'j2, 'd2, 'a2)
.B   fmtty_rel ->
.B   ('a1, 'b1, 'c1, 'd1, 'e1, 'f1, 'a2, 'b2, 'c2, 'd2, 'e2, 'f2)
.B   fmtty_rel ->
.B   ('g1, 'b1, 'c1, 'j1, 'e1, 'f1, 'g2, 'b2, 'c2, 'j2, 'e2, 'f2)
.B   fmtty_rel
.sp

.sp

.I val erase_rel 
: 
.B ('a, 'b, 'c, 'd, 'e, 'f, 'g, 'h, 'i, 'j, 'k, 'l)
.B   fmtty_rel ->
.B   ('a, 'b, 'c, 'd, 'e, 'f) fmtty
.sp

.sp

.I val concat_fmt 
: 
.B ('a, 'b, 'c, 'd, 'e, 'f) fmt ->
.B   ('f, 'b, 'c, 'e, 'g, 'h) fmt ->
.B   ('a, 'b, 'c, 'd, 'g, 'h) fmt
.sp

.sp
