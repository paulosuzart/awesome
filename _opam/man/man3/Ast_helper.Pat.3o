.TH "Ast_helper.Pat" 3 2024-04-07 OCamldoc "OCaml library"
.SH NAME
Ast_helper.Pat \- Patterns
.SH Module
Module   Ast_helper.Pat
.SH Documentation
.sp
Module
.BI "Pat"
 : 
.B sig end

.sp
Patterns

.sp

.sp
.sp

.I val mk 
: 
.B ?loc:Ast_helper.loc ->
.B   ?attrs:Ast_helper.attrs -> Parsetree.pattern_desc -> Parsetree.pattern
.sp

.sp

.I val attr 
: 
.B Parsetree.pattern -> Parsetree.attribute -> Parsetree.pattern
.sp

.sp

.I val any 
: 
.B ?loc:Ast_helper.loc -> ?attrs:Ast_helper.attrs -> unit -> Parsetree.pattern
.sp

.sp

.I val var 
: 
.B ?loc:Ast_helper.loc ->
.B   ?attrs:Ast_helper.attrs -> Ast_helper.str -> Parsetree.pattern
.sp

.sp

.I val alias 
: 
.B ?loc:Ast_helper.loc ->
.B   ?attrs:Ast_helper.attrs ->
.B   Parsetree.pattern -> Ast_helper.str -> Parsetree.pattern
.sp

.sp

.I val constant 
: 
.B ?loc:Ast_helper.loc ->
.B   ?attrs:Ast_helper.attrs -> Parsetree.constant -> Parsetree.pattern
.sp

.sp

.I val interval 
: 
.B ?loc:Ast_helper.loc ->
.B   ?attrs:Ast_helper.attrs ->
.B   Parsetree.constant -> Parsetree.constant -> Parsetree.pattern
.sp

.sp

.I val tuple 
: 
.B ?loc:Ast_helper.loc ->
.B   ?attrs:Ast_helper.attrs -> Parsetree.pattern list -> Parsetree.pattern
.sp

.sp

.I val construct 
: 
.B ?loc:Ast_helper.loc ->
.B   ?attrs:Ast_helper.attrs ->
.B   Ast_helper.lid ->
.B   (Ast_helper.str list * Parsetree.pattern) option -> Parsetree.pattern
.sp

.sp

.I val variant 
: 
.B ?loc:Ast_helper.loc ->
.B   ?attrs:Ast_helper.attrs ->
.B   Asttypes.label -> Parsetree.pattern option -> Parsetree.pattern
.sp

.sp

.I val record 
: 
.B ?loc:Ast_helper.loc ->
.B   ?attrs:Ast_helper.attrs ->
.B   (Ast_helper.lid * Parsetree.pattern) list ->
.B   Asttypes.closed_flag -> Parsetree.pattern
.sp

.sp

.I val array 
: 
.B ?loc:Ast_helper.loc ->
.B   ?attrs:Ast_helper.attrs -> Parsetree.pattern list -> Parsetree.pattern
.sp

.sp

.I val or_ 
: 
.B ?loc:Ast_helper.loc ->
.B   ?attrs:Ast_helper.attrs ->
.B   Parsetree.pattern -> Parsetree.pattern -> Parsetree.pattern
.sp

.sp

.I val constraint_ 
: 
.B ?loc:Ast_helper.loc ->
.B   ?attrs:Ast_helper.attrs ->
.B   Parsetree.pattern -> Parsetree.core_type -> Parsetree.pattern
.sp

.sp

.I val type_ 
: 
.B ?loc:Ast_helper.loc ->
.B   ?attrs:Ast_helper.attrs -> Ast_helper.lid -> Parsetree.pattern
.sp

.sp

.I val lazy_ 
: 
.B ?loc:Ast_helper.loc ->
.B   ?attrs:Ast_helper.attrs -> Parsetree.pattern -> Parsetree.pattern
.sp

.sp

.I val unpack 
: 
.B ?loc:Ast_helper.loc ->
.B   ?attrs:Ast_helper.attrs -> Ast_helper.str_opt -> Parsetree.pattern
.sp

.sp

.I val open_ 
: 
.B ?loc:Ast_helper.loc ->
.B   ?attrs:Ast_helper.attrs ->
.B   Ast_helper.lid -> Parsetree.pattern -> Parsetree.pattern
.sp

.sp

.I val exception_ 
: 
.B ?loc:Ast_helper.loc ->
.B   ?attrs:Ast_helper.attrs -> Parsetree.pattern -> Parsetree.pattern
.sp

.sp

.I val extension 
: 
.B ?loc:Ast_helper.loc ->
.B   ?attrs:Ast_helper.attrs -> Parsetree.extension -> Parsetree.pattern
.sp

.sp
